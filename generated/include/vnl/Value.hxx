
#ifndef INCLUDE_VNI_GENERATED_vnl_Value_HXX_
#define INCLUDE_VNI_GENERATED_vnl_Value_HXX_

// AUTO GENERATED by virtual-network-interface codegen


#include <vnl/Type.h>


namespace vnl {

class Value : public vnl::Type {
public:
	static const uint32_t VNI_HASH = 0xfdb7a5a8;
	static const uint32_t NUM_FIELDS = 0;
	
	
	
	Value() {
	}
	
	static Value* create();
	virtual Value* clone() const;
	virtual void raise() const { throw *this; }
	virtual void destroy();
	
	virtual void serialize(vnl::io::TypeOutput& _out) const;
	virtual void deserialize(vnl::io::TypeInput& _in, int _size);
	
	virtual uint32_t vni_hash() const { return VNI_HASH; }
	virtual const char* type_name() const { return "vnl.Value"; }
	
	virtual int type_size() const { return sizeof(Value); }
	virtual int num_fields() const { return NUM_FIELDS; }
	virtual int field_index(vnl::Hash32 _hash) const;
	virtual const char* field_name(int _index) const;
	virtual void get_field(int _index, vnl::String& _str) const;
	virtual void set_field(int _index, const vnl::String& _str);
	virtual void get_field(int _index, vnl::io::TypeOutput& _out) const;
	virtual void set_field(int _index, vnl::io::TypeInput& _in);
	
	
};

} // namespace


namespace vnl {

} // vnl

#endif // INCLUDE_VNI_GENERATED_vnl_Value_HXX_
