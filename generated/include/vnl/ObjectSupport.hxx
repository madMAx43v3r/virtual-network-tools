
#ifndef INCLUDE_VNI_GENERATED_vnl_ObjectBase_HXX_
#define INCLUDE_VNI_GENERATED_vnl_ObjectBase_HXX_

// AUTO GENERATED by virtual-network-interface codegen

#include <vnl/Interface.h>
#include <vnl/Shutdown.hxx>

#include <vnl/Type.hxx>


namespace vnl {

class ObjectBase : public vnl::Interface {
public:
	static const uint32_t VNI_HASH = 0x430e9bb0;
	static const uint32_t NUM_FIELDS = 2;
	
	typedef vnl::Interface Super;
	
	static const int32_t ERROR = 1;
	static const int32_t WARN = 2;
	static const int32_t INFO = 3;
	static const int32_t DEBUG = 4;
	
	int32_t vnl_log_level;
	int32_t vnl_max_num_pending;
	
	ObjectBase(const vnl::String& domain_, const vnl::String& topic_)
	{
		vnl_log_level = INFO;
		vnl_max_num_pending = -1;
		vnl::read_config(domain_, topic_, "vnl_log_level", vnl_log_level);
		vnl::read_config(domain_, topic_, "vnl_max_num_pending", vnl_max_num_pending);
	}
	
	virtual uint32_t vni_hash() const { return VNI_HASH; }
	virtual const char* type_name() const { return "vnl.Object"; }
	
	virtual int num_fields() const { return NUM_FIELDS; }
	virtual int field_index(vnl::Hash32 _hash) const;
	virtual const char* field_name(int _index) const;
	virtual void get_field(int _index, vnl::String& _str) const;
	virtual void set_field(int _index, const vnl::String& _str);
	virtual void get_field(int _index, vnl::io::TypeOutput& _out) const;
	virtual void set_field(int _index, vnl::io::TypeInput& _in);
	
protected:
	virtual void handle(const vnl::Shutdown& event, const vnl::Packet& packet) { handle(event); }
	virtual void handle(const vnl::Shutdown& event) {}
	virtual void exit() = 0;
	
	virtual bool vni_call(vnl::io::TypeInput& _in, uint32_t _hash, int _num_args);
	virtual bool vni_const_call(vnl::io::TypeInput& _in, uint32_t _hash, int _num_args, vnl::io::TypeOutput& _out);
	virtual bool handle_switch(vnl::Value* _sample, vnl::Packet* _packet);
	
	template<class W>
	void write_fields(W& _writer) const {
		_writer.set_vnl_log_level(vnl_log_level);
		_writer.set_vnl_max_num_pending(vnl_max_num_pending);
	}
	
};

} // namespace

#endif // INCLUDE_VNI_GENERATED_vnl_ObjectBase_HXX_
