
// AUTO GENERATED by virtual-network-interface codegen

#include <vnl/Value.hxx>
#include <vnl/Type.hxx>
#include <vnl/Var.h>
#include <vnl/Announce.hxx>
#include <vnl/DuplicateKeyException.hxx>
#include <vnl/Entry.hxx>
#include <vnl/Exception.hxx>
#include <vnl/Exit.hxx>
#include <vnl/Function.hxx>
#include <vnl/Header.hxx>
#include <vnl/Heartbeat.hxx>
#include <vnl/IOException.hxx>
#include <vnl/IllegalInstruction.hxx>
#include <vnl/Instance.hxx>
#include <vnl/LogMsg.hxx>
#include <vnl/MemoryException.hxx>
#include <vnl/NoSuchFieldException.hxx>
#include <vnl/NoSuchKeyException.hxx>
#include <vnl/NoSuchMethodException.hxx>
#include <vnl/NullPointerException.hxx>
#include <vnl/OutOfMemoryException.hxx>
#include <vnl/RecordEntry.hxx>
#include <vnl/RecordHeader.hxx>
#include <vnl/RecordTypeInfo.hxx>
#include <vnl/RecordValue.hxx>
#include <vnl/RecorderStatus.hxx>
#include <vnl/SegmentationFault.hxx>
#include <vnl/Shutdown.hxx>
#include <vnl/StackOverflow.hxx>
#include <vnl/TimeoutException.hxx>
#include <vnl/Topic.hxx>
#include <vnl/TypeMismatchException.hxx>
#include <vnl/info/ClientInfo.hxx>
#include <vnl/info/Field.hxx>
#include <vnl/info/MemoryInfo.hxx>
#include <vnl/info/Method.hxx>
#include <vnl/info/ObjectInfo.hxx>
#include <vnl/info/Parameter.hxx>
#include <vnl/info/PlayerStatus.hxx>
#include <vnl/info/ProcessInfo.hxx>
#include <vnl/info/RemoteInfo.hxx>
#include <vnl/info/TopicInfo.hxx>
#include <vnl/info/TopicInfoList.hxx>
#include <vnl/info/Type.hxx>
#include <vnl/info/TypeName.hxx>

namespace vnl {

const uint32_t Value::VNI_HASH;
const uint32_t Value::NUM_FIELDS;

Value::Value() {
}

Value* Value::create() {
	return vnl::create<Value>();
}

Value* Value::create(vnl::Hash32 hash) {
	switch(hash) {
		case 0x417d65c7: return vnl::create<vnl::Announce>();
		case 0x7e6aa525: return vnl::create<vnl::DuplicateKeyException>();
		case 0x8c46309d: return vnl::create<vnl::Entry>();
		case 0xbe87903d: return vnl::create<vnl::Exception>();
		case 0x3bd088b0: return vnl::create<vnl::Exit>();
		case 0x49860f3d: return vnl::create<vnl::Function>();
		case 0x52740af4: return vnl::create<vnl::Header>();
		case 0xa262a675: return vnl::create<vnl::Heartbeat>();
		case 0xabd5ff87: return vnl::create<vnl::IOException>();
		case 0xf8fa6b14: return vnl::create<vnl::IllegalInstruction>();
		case 0x67d48190: return vnl::create<vnl::Instance>();
		case 0x9df3e6f5: return vnl::create<vnl::LogMsg>();
		case 0x4643b1ad: return vnl::create<vnl::MemoryException>();
		case 0xd7988e27: return vnl::create<vnl::NoSuchFieldException>();
		case 0xd8d131ca: return vnl::create<vnl::NoSuchKeyException>();
		case 0x69a97186: return vnl::create<vnl::NoSuchMethodException>();
		case 0x375698d0: return vnl::create<vnl::NullPointerException>();
		case 0x61b281b0: return vnl::create<vnl::OutOfMemoryException>();
		case 0x6d2a8c15: return vnl::create<vnl::RecordEntry>();
		case 0xc10cd56c: return vnl::create<vnl::RecordHeader>();
		case 0x9a729ac6: return vnl::create<vnl::RecordTypeInfo>();
		case 0x1cdb1920: return vnl::create<vnl::RecordValue>();
		case 0xc8a62879: return vnl::create<vnl::RecorderStatus>();
		case 0x57c2463c: return vnl::create<vnl::SegmentationFault>();
		case 0xcdc22e1f: return vnl::create<vnl::Shutdown>();
		case 0x2cd1d77c: return vnl::create<vnl::StackOverflow>();
		case 0x8c528f1: return vnl::create<vnl::TimeoutException>();
		case 0xddc3d187: return vnl::create<vnl::Topic>();
		case 0x493cc6db: return vnl::create<vnl::TypeMismatchException>();
		case 0x6959008e: return vnl::create<vnl::info::ClientInfo>();
		case 0xd52524d4: return vnl::create<vnl::info::Field>();
		case 0x734ed4bc: return vnl::create<vnl::info::MemoryInfo>();
		case 0x1b510753: return vnl::create<vnl::info::Method>();
		case 0x6400b0b3: return vnl::create<vnl::info::ObjectInfo>();
		case 0xf5e3f3b6: return vnl::create<vnl::info::Parameter>();
		case 0xf9baa92e: return vnl::create<vnl::info::PlayerStatus>();
		case 0x61e5f15b: return vnl::create<vnl::info::ProcessInfo>();
		case 0x7aa64297: return vnl::create<vnl::info::RemoteInfo>();
		case 0x1e3eb783: return vnl::create<vnl::info::TopicInfo>();
		case 0xdc558ad: return vnl::create<vnl::info::TopicInfoList>();
		case 0xbde99c40: return vnl::create<vnl::info::Type>();
		case 0x7450a5b3: return vnl::create<vnl::info::TypeName>();
		case 0xfdb7a5a8: return vnl::create<vnl::Value>();
		default: return 0;
	}
}

Value* Value::clone() const {
	return vnl::clone<Value>(*this);
}

void Value::destroy() {
	this->Value::~Value();
	return vnl::internal::global_pool_->push_back(this, sizeof(Value));
}

bool Value::is_assignable(vnl::Hash32 hash) {
	switch(hash) {
		case 0x417d65c7: return true;
		case 0x7e6aa525: return true;
		case 0x8c46309d: return true;
		case 0xbe87903d: return true;
		case 0x3bd088b0: return true;
		case 0x49860f3d: return true;
		case 0x52740af4: return true;
		case 0xa262a675: return true;
		case 0xabd5ff87: return true;
		case 0xf8fa6b14: return true;
		case 0x67d48190: return true;
		case 0x9df3e6f5: return true;
		case 0x4643b1ad: return true;
		case 0xd7988e27: return true;
		case 0xd8d131ca: return true;
		case 0x69a97186: return true;
		case 0x375698d0: return true;
		case 0x61b281b0: return true;
		case 0x6d2a8c15: return true;
		case 0xc10cd56c: return true;
		case 0x9a729ac6: return true;
		case 0x1cdb1920: return true;
		case 0xc8a62879: return true;
		case 0x57c2463c: return true;
		case 0xcdc22e1f: return true;
		case 0x2cd1d77c: return true;
		case 0x8c528f1: return true;
		case 0xddc3d187: return true;
		case 0x493cc6db: return true;
		case 0x6959008e: return true;
		case 0xd52524d4: return true;
		case 0x734ed4bc: return true;
		case 0x1b510753: return true;
		case 0x6400b0b3: return true;
		case 0xf5e3f3b6: return true;
		case 0xf9baa92e: return true;
		case 0x61e5f15b: return true;
		case 0x7aa64297: return true;
		case 0x1e3eb783: return true;
		case 0xdc558ad: return true;
		case 0xbde99c40: return true;
		case 0x7450a5b3: return true;
		case 0xfdb7a5a8: return true;
		default: return false;
	}
}

bool Value::assign(const vnl::Value& _value) {
	switch(_value.get_vni_hash()) {
		case 0x417d65c7:
		case 0x7e6aa525:
		case 0x8c46309d:
		case 0xbe87903d:
		case 0x3bd088b0:
		case 0x49860f3d:
		case 0x52740af4:
		case 0xa262a675:
		case 0xabd5ff87:
		case 0xf8fa6b14:
		case 0x67d48190:
		case 0x9df3e6f5:
		case 0x4643b1ad:
		case 0xd7988e27:
		case 0xd8d131ca:
		case 0x69a97186:
		case 0x375698d0:
		case 0x61b281b0:
		case 0x6d2a8c15:
		case 0xc10cd56c:
		case 0x9a729ac6:
		case 0x1cdb1920:
		case 0xc8a62879:
		case 0x57c2463c:
		case 0xcdc22e1f:
		case 0x2cd1d77c:
		case 0x8c528f1:
		case 0xddc3d187:
		case 0x493cc6db:
		case 0x6959008e:
		case 0xd52524d4:
		case 0x734ed4bc:
		case 0x1b510753:
		case 0x6400b0b3:
		case 0xf5e3f3b6:
		case 0xf9baa92e:
		case 0x61e5f15b:
		case 0x7aa64297:
		case 0x1e3eb783:
		case 0xdc558ad:
		case 0xbde99c40:
		case 0x7450a5b3:
		case 0xfdb7a5a8:
			*this = (const Value&)_value; return true;
		default: return false;
	}
}

void Value::serialize(vnl::io::TypeOutput& _out) const {
	_out.putEntry(VNL_IO_CLASS, NUM_FIELDS);
	_out.putHash(VNI_HASH);
}

void Value::deserialize(vnl::io::TypeInput& _in, int _size) {
	for(int i = 0; i < _size && !_in.error(); ++i) {
		uint32_t _hash = 0;
		_in.getHash(_hash);
		switch(_hash) {
			default: _in.skip();
		}
	}
}

int Value::get_field_index(vnl::Hash32 _hash) const {
	switch(_hash) {
		default: return -1;
	}
}

const char* Value::get_field_name(int _index) const {
	switch(_index) {
		default: return 0;
	}
}

void Value::get_field(int _index, vnl::String& _str) const {
	switch(_index) {
	}
}

void Value::set_field(int _index, const vnl::String& _str) {
	switch(_index) {
	}
}

void Value::get_field(int _index, vnl::io::TypeOutput& _out) const {
	switch(_index) {
		default: _out.putNull();
	}
}

void Value::set_field(int _index, vnl::io::TypeInput& _in) {
	switch(_index) {
	}
}

void Value::get_field(int _index, vnl::Var& _var) const {
	switch(_index) {
		default: _var.clear();
	}
}

void Value::set_field(int _index, const vnl::Var& _var) {
	switch(_index) {
	}
}

vnl::Array<vnl::String> get_class_names() {
	vnl::Array<vnl::String> res;
	res.push_back("vnl.Announce");
	res.push_back("vnl.DuplicateKeyException");
	res.push_back("vnl.Entry");
	res.push_back("vnl.Exception");
	res.push_back("vnl.Exit");
	res.push_back("vnl.Function");
	res.push_back("vnl.Header");
	res.push_back("vnl.Heartbeat");
	res.push_back("vnl.IOException");
	res.push_back("vnl.IllegalInstruction");
	res.push_back("vnl.Instance");
	res.push_back("vnl.LogMsg");
	res.push_back("vnl.MemoryException");
	res.push_back("vnl.NoSuchFieldException");
	res.push_back("vnl.NoSuchKeyException");
	res.push_back("vnl.NoSuchMethodException");
	res.push_back("vnl.NullPointerException");
	res.push_back("vnl.OutOfMemoryException");
	res.push_back("vnl.RecordEntry");
	res.push_back("vnl.RecordHeader");
	res.push_back("vnl.RecordTypeInfo");
	res.push_back("vnl.RecordValue");
	res.push_back("vnl.RecorderStatus");
	res.push_back("vnl.SegmentationFault");
	res.push_back("vnl.Shutdown");
	res.push_back("vnl.StackOverflow");
	res.push_back("vnl.TimeoutException");
	res.push_back("vnl.Topic");
	res.push_back("vnl.TypeMismatchException");
	res.push_back("vnl.info.ClientInfo");
	res.push_back("vnl.info.Field");
	res.push_back("vnl.info.MemoryInfo");
	res.push_back("vnl.info.Method");
	res.push_back("vnl.info.ObjectInfo");
	res.push_back("vnl.info.Parameter");
	res.push_back("vnl.info.PlayerStatus");
	res.push_back("vnl.info.ProcessInfo");
	res.push_back("vnl.info.RemoteInfo");
	res.push_back("vnl.info.TopicInfo");
	res.push_back("vnl.info.TopicInfoList");
	res.push_back("vnl.info.Type");
	res.push_back("vnl.info.TypeName");
	res.push_back("vnl.Value");
	return res;
}

vnl::Map<vnl::Hash32, vnl::info::Type> get_type_info() {
	vnl::Map<vnl::Hash32, vnl::info::Type> res;
	{
		vnl::info::Type& info = res["vnl.Announce"];
		info.hash = 0x417d65c7;
		info.name = "vnl.Announce";
		info.is_struct = true;
		info.is_class = true;
		info.super.hash = 0xfdb7a5a8;
		info.super.name = "vnl.Value";
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0xfb4f2b4;
			field.name = "instance";
			field.type.hash = 0x67d48190;
			field.type.name = "vnl.Instance";
		}
	}
	{
		vnl::info::Type& info = res["vnl.DuplicateKeyException"];
		info.hash = 0x7e6aa525;
		info.name = "vnl.DuplicateKeyException";
		info.is_struct = true;
		info.is_class = true;
		info.super.hash = 0xabd5ff87;
		info.super.name = "vnl.IOException";
	}
	{
		vnl::info::Type& info = res["vnl.Entry"];
		info.hash = 0x8c46309d;
		info.name = "vnl.Entry";
		info.is_struct = true;
		info.is_class = true;
		info.super.hash = 0xfdb7a5a8;
		info.super.name = "vnl.Value";
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x23ff6ebe;
			field.name = "key";
			field.type.hash = 0x50f8702d;
			field.type.name = "vnl.Hash64";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x55c30e99;
			field.name = "version";
			field.type.hash = 0x19d39da3;
			field.type.name = "long";
		}
	}
	{
		vnl::info::Type& info = res["vnl.Exception"];
		info.hash = 0xbe87903d;
		info.name = "vnl.Exception";
		info.is_struct = true;
		info.is_class = true;
		info.super.hash = 0xfdb7a5a8;
		info.super.name = "vnl.Value";
	}
	{
		vnl::info::Type& info = res["vnl.Exit"];
		info.hash = 0x3bd088b0;
		info.name = "vnl.Exit";
		info.is_struct = true;
		info.is_class = true;
		info.super.hash = 0xfdb7a5a8;
		info.super.name = "vnl.Value";
	}
	{
		vnl::info::Type& info = res["vnl.Function"];
		info.hash = 0x49860f3d;
		info.name = "vnl.Function";
		info.is_struct = true;
		info.is_class = true;
		info.super.hash = 0xfdb7a5a8;
		info.super.name = "vnl.Value";
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x539b7130;
			field.name = "name";
			field.type.hash = 0x3ea151ae;
			field.type.name = "vnl.String";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x3f42b528;
			field.name = "params";
			field.type.hash = 0x5056b5ce;
			field.type.name = "vnl.List";
			field.type.generics.push_back("vnl.String");
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x6f40bda3;
			field.name = "defaults";
			field.type.hash = 0x5056b5ce;
			field.type.name = "vnl.List";
			field.type.generics.push_back("vnl.Var");
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0xe0051ff1;
			field.name = "code";
			field.type.hash = 0x5056b5ce;
			field.type.name = "vnl.List";
			field.type.generics.push_back("vnl.code_t");
		}
	}
	{
		vnl::info::Type& info = res["vnl.Header"];
		info.hash = 0x52740af4;
		info.name = "vnl.Header";
		info.is_struct = true;
		info.is_class = true;
		info.super.hash = 0xfdb7a5a8;
		info.super.name = "vnl.Value";
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0xd27ee4a0;
			field.name = "src_topic";
			field.type.hash = 0xddc3d187;
			field.type.name = "vnl.Topic";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0xaaf981a0;
			field.name = "dst_topic";
			field.type.hash = 0xddc3d187;
			field.type.name = "vnl.Topic";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x85aba286;
			field.name = "src_mac";
			field.type.hash = 0x50f8702d;
			field.type.name = "vnl.Hash64";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x6ed7c747;
			field.name = "send_time";
			field.type.hash = 0x19d39da3;
			field.type.name = "long";
		}
	}
	{
		vnl::info::Type& info = res["vnl.Heartbeat"];
		info.hash = 0xa262a675;
		info.name = "vnl.Heartbeat";
		info.is_struct = true;
		info.is_class = true;
		info.super.hash = 0xfdb7a5a8;
		info.super.name = "vnl.Value";
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x85aba286;
			field.name = "src_mac";
			field.type.hash = 0x50f8702d;
			field.type.name = "vnl.Hash64";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x5fa779df;
			field.name = "type";
			field.type.hash = 0x3ea151ae;
			field.type.name = "vnl.String";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x5190a58c;
			field.name = "domain";
			field.type.hash = 0x3ea151ae;
			field.type.name = "vnl.String";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0xf68c6937;
			field.name = "topic";
			field.type.hash = 0x3ea151ae;
			field.type.name = "vnl.String";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0xd129c896;
			field.name = "interval";
			field.type.hash = 0xf0f9b0e2;
			field.type.name = "int";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0xcaacc145;
			field.name = "info";
			field.type.hash = 0x6400b0b3;
			field.type.name = "vnl.info.ObjectInfo";
		}
	}
	{
		vnl::info::Type& info = res["vnl.IOException"];
		info.hash = 0xabd5ff87;
		info.name = "vnl.IOException";
		info.is_struct = true;
		info.is_class = true;
		info.super.hash = 0xbe87903d;
		info.super.name = "vnl.Exception";
	}
	{
		vnl::info::Type& info = res["vnl.IllegalInstruction"];
		info.hash = 0xf8fa6b14;
		info.name = "vnl.IllegalInstruction";
		info.is_struct = true;
		info.is_class = true;
		info.super.hash = 0xbe87903d;
		info.super.name = "vnl.Exception";
	}
	{
		vnl::info::Type& info = res["vnl.Instance"];
		info.hash = 0x67d48190;
		info.name = "vnl.Instance";
		info.is_struct = true;
		info.is_class = true;
		info.super.hash = 0xfdb7a5a8;
		info.super.name = "vnl.Value";
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x85aba286;
			field.name = "src_mac";
			field.type.hash = 0x50f8702d;
			field.type.name = "vnl.Hash64";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x5fa779df;
			field.name = "type";
			field.type.hash = 0x3ea151ae;
			field.type.name = "vnl.String";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x5190a58c;
			field.name = "domain";
			field.type.hash = 0x3ea151ae;
			field.type.name = "vnl.String";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0xf68c6937;
			field.name = "topic";
			field.type.hash = 0x3ea151ae;
			field.type.name = "vnl.String";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0xb5065ea4;
			field.name = "heartbeat_interval";
			field.type.hash = 0xf0f9b0e2;
			field.type.name = "int";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x57723c04;
			field.name = "last_heartbeat";
			field.type.hash = 0x19d39da3;
			field.type.name = "long";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0xa2fb771f;
			field.name = "is_alive";
			field.type.hash = 0xcc74e5d4;
			field.type.name = "bool";
		}
	}
	{
		vnl::info::Type& info = res["vnl.LogMsg"];
		info.hash = 0x9df3e6f5;
		info.name = "vnl.LogMsg";
		info.is_struct = true;
		info.is_class = true;
		info.super.hash = 0xfdb7a5a8;
		info.super.name = "vnl.Value";
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x15364763;
			field.name = "level";
			field.type.hash = 0xf0f9b0e2;
			field.type.name = "int";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x85aba286;
			field.name = "src_mac";
			field.type.hash = 0x50f8702d;
			field.type.name = "vnl.Hash64";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0xf7a74926;
			field.name = "msg";
			field.type.hash = 0x3ea151ae;
			field.type.name = "vnl.String";
		}
	}
	{
		vnl::info::Type& info = res["vnl.MemoryException"];
		info.hash = 0x4643b1ad;
		info.name = "vnl.MemoryException";
		info.is_struct = true;
		info.is_class = true;
		info.super.hash = 0xbe87903d;
		info.super.name = "vnl.Exception";
	}
	{
		vnl::info::Type& info = res["vnl.NoSuchFieldException"];
		info.hash = 0xd7988e27;
		info.name = "vnl.NoSuchFieldException";
		info.is_struct = true;
		info.is_class = true;
		info.super.hash = 0xabd5ff87;
		info.super.name = "vnl.IOException";
	}
	{
		vnl::info::Type& info = res["vnl.NoSuchKeyException"];
		info.hash = 0xd8d131ca;
		info.name = "vnl.NoSuchKeyException";
		info.is_struct = true;
		info.is_class = true;
		info.super.hash = 0xabd5ff87;
		info.super.name = "vnl.IOException";
	}
	{
		vnl::info::Type& info = res["vnl.NoSuchMethodException"];
		info.hash = 0x69a97186;
		info.name = "vnl.NoSuchMethodException";
		info.is_struct = true;
		info.is_class = true;
		info.super.hash = 0xabd5ff87;
		info.super.name = "vnl.IOException";
	}
	{
		vnl::info::Type& info = res["vnl.NullPointerException"];
		info.hash = 0x375698d0;
		info.name = "vnl.NullPointerException";
		info.is_struct = true;
		info.is_class = true;
		info.super.hash = 0xbe87903d;
		info.super.name = "vnl.Exception";
	}
	{
		vnl::info::Type& info = res["vnl.OutOfMemoryException"];
		info.hash = 0x61b281b0;
		info.name = "vnl.OutOfMemoryException";
		info.is_struct = true;
		info.is_class = true;
		info.super.hash = 0xbe87903d;
		info.super.name = "vnl.Exception";
	}
	{
		vnl::info::Type& info = res["vnl.RecordEntry"];
		info.hash = 0x6d2a8c15;
		info.name = "vnl.RecordEntry";
		info.is_struct = true;
		info.is_class = true;
		info.super.hash = 0xfdb7a5a8;
		info.super.name = "vnl.Value";
	}
	{
		vnl::info::Type& info = res["vnl.RecordHeader"];
		info.hash = 0xc10cd56c;
		info.name = "vnl.RecordHeader";
		info.is_struct = true;
		info.is_class = true;
		info.super.hash = 0xfdb7a5a8;
		info.super.name = "vnl.Value";
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x55c30e99;
			field.name = "version";
			field.type.hash = 0xf0f9b0e2;
			field.type.name = "int";
			vnl::to_string(field.value, 1);
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0xd7a7ecc4;
			field.name = "header_size";
			field.type.hash = 0xf0f9b0e2;
			field.type.name = "int";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0xf3aac4d9;
			field.name = "have_type_info";
			field.type.hash = 0xcc74e5d4;
			field.type.name = "bool";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x5ee0fae3;
			field.name = "num_samples";
			field.type.hash = 0x19d39da3;
			field.type.name = "long";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x9c1b758e;
			field.name = "begin_time";
			field.type.hash = 0x19d39da3;
			field.type.name = "long";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x28517039;
			field.name = "end_time";
			field.type.hash = 0x19d39da3;
			field.type.name = "long";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x22dd6aa2;
			field.name = "topics";
			field.type.hash = 0x556c0dd6;
			field.type.name = "vnl.Array";
			field.type.generics.push_back("vnl.Topic");
		}
	}
	{
		vnl::info::Type& info = res["vnl.RecordTypeInfo"];
		info.hash = 0x9a729ac6;
		info.name = "vnl.RecordTypeInfo";
		info.is_struct = true;
		info.is_class = true;
		info.super.hash = 0xfdb7a5a8;
		info.super.name = "vnl.Value";
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x316d3;
			field.name = "type_map";
			field.type.hash = 0xe5d1fc67;
			field.type.name = "vnl.Map";
			field.type.generics.push_back("vnl.Hash32");
			field.type.generics.push_back("vnl.info.Type");
		}
	}
	{
		vnl::info::Type& info = res["vnl.RecordValue"];
		info.hash = 0x1cdb1920;
		info.name = "vnl.RecordValue";
		info.is_struct = true;
		info.is_class = true;
		info.super.hash = 0x6d2a8c15;
		info.super.name = "vnl.RecordEntry";
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0xaf3e4ff0;
			field.name = "time";
			field.type.hash = 0x19d39da3;
			field.type.name = "long";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x5190a58c;
			field.name = "domain";
			field.type.hash = 0x50f8702d;
			field.type.name = "vnl.Hash64";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0xf68c6937;
			field.name = "topic";
			field.type.hash = 0x50f8702d;
			field.type.name = "vnl.Hash64";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x278de0d5;
			field.name = "header";
			field.type.hash = 0x6a5f5c5b;
			field.type.name = "vnl.Pointer";
			field.type.generics.push_back("vnl.Header");
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0xd6f81d18;
			field.name = "value";
			field.type.hash = 0x6a5f5c5b;
			field.type.name = "vnl.Pointer";
			field.type.generics.push_back("vnl.Value");
		}
	}
	{
		vnl::info::Type& info = res["vnl.RecorderStatus"];
		info.hash = 0xc8a62879;
		info.name = "vnl.RecorderStatus";
		info.is_struct = true;
		info.is_class = true;
		info.super.hash = 0xfdb7a5a8;
		info.super.name = "vnl.Value";
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0xaf3e4ff0;
			field.name = "time";
			field.type.hash = 0x19d39da3;
			field.type.name = "long";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0xb60d3446;
			field.name = "filename";
			field.type.hash = 0x3ea151ae;
			field.type.name = "vnl.String";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x52d8636d;
			field.name = "is_recording";
			field.type.hash = 0xcc74e5d4;
			field.type.name = "bool";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x2cc3ccdf;
			field.name = "is_error";
			field.type.hash = 0xcc74e5d4;
			field.type.name = "bool";
		}
	}
	{
		vnl::info::Type& info = res["vnl.SegmentationFault"];
		info.hash = 0x57c2463c;
		info.name = "vnl.SegmentationFault";
		info.is_struct = true;
		info.is_class = true;
		info.super.hash = 0xbe87903d;
		info.super.name = "vnl.Exception";
	}
	{
		vnl::info::Type& info = res["vnl.Shutdown"];
		info.hash = 0xcdc22e1f;
		info.name = "vnl.Shutdown";
		info.is_struct = true;
		info.is_class = true;
		info.super.hash = 0xfdb7a5a8;
		info.super.name = "vnl.Value";
	}
	{
		vnl::info::Type& info = res["vnl.StackOverflow"];
		info.hash = 0x2cd1d77c;
		info.name = "vnl.StackOverflow";
		info.is_struct = true;
		info.is_class = true;
		info.super.hash = 0xbe87903d;
		info.super.name = "vnl.Exception";
	}
	{
		vnl::info::Type& info = res["vnl.TimeoutException"];
		info.hash = 0x8c528f1;
		info.name = "vnl.TimeoutException";
		info.is_struct = true;
		info.is_class = true;
		info.super.hash = 0xabd5ff87;
		info.super.name = "vnl.IOException";
	}
	{
		vnl::info::Type& info = res["vnl.Topic"];
		info.hash = 0xddc3d187;
		info.name = "vnl.Topic";
		info.is_struct = true;
		info.is_class = true;
		info.super.hash = 0xfdb7a5a8;
		info.super.name = "vnl.Value";
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x5190a58c;
			field.name = "domain";
			field.type.hash = 0x3ea151ae;
			field.type.name = "vnl.String";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x539b7130;
			field.name = "name";
			field.type.hash = 0x3ea151ae;
			field.type.name = "vnl.String";
		}
	}
	{
		vnl::info::Type& info = res["vnl.TypeMismatchException"];
		info.hash = 0x493cc6db;
		info.name = "vnl.TypeMismatchException";
		info.is_struct = true;
		info.is_class = true;
		info.super.hash = 0xabd5ff87;
		info.super.name = "vnl.IOException";
	}
	{
		vnl::info::Type& info = res["vnl.Value"];
		info.hash = 0xfdb7a5a8;
		info.name = "vnl.Value";
		info.is_struct = true;
		info.is_class = true;
	}
	{
		vnl::info::Type& info = res["vnl.code_t"];
		info.hash = 0x8b38c80f;
		info.name = "vnl.code_t";
		info.is_struct = true;
		info.super.hash = 0xfdb7a5a8;
		info.super.name = "vnl.Value";
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x858ee518;
			field.name = "op";
			field.type.hash = 0x1aa757db;
			field.type.name = "vnl.op_code_t";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0xca837fda;
			field.name = "arg";
			field.type.hash = 0x2051aa54;
			field.type.name = "vnl.Vector";
			field.type.generics.push_back("vnl.Var");
			field.type.generics.push_back("3");
		}
	}
	{
		vnl::info::Type& info = res["vnl.info.ClientInfo"];
		info.hash = 0x6959008e;
		info.name = "vnl.info.ClientInfo";
		info.is_struct = true;
		info.is_class = true;
		info.super.hash = 0xfdb7a5a8;
		info.super.name = "vnl.Value";
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x4fcb9162;
			field.name = "proxy";
			field.type.hash = 0x50f8702d;
			field.type.name = "vnl.Hash64";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0xe451aab2;
			field.name = "num_requests";
			field.type.hash = 0x19d39da3;
			field.type.name = "long";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0xb5a0f43c;
			field.name = "num_errors";
			field.type.hash = 0x19d39da3;
			field.type.name = "long";
		}
	}
	{
		vnl::info::Type& info = res["vnl.info.Field"];
		info.hash = 0xd52524d4;
		info.name = "vnl.info.Field";
		info.is_struct = true;
		info.is_class = true;
		info.super.hash = 0xfdb7a5a8;
		info.super.name = "vnl.Value";
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0xc114cc40;
			field.name = "hash";
			field.type.hash = 0x87aaa5f9;
			field.type.name = "vnl.Hash32";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x539b7130;
			field.name = "name";
			field.type.hash = 0x3ea151ae;
			field.type.name = "vnl.String";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0xd6f81d18;
			field.name = "value";
			field.type.hash = 0x3ea151ae;
			field.type.name = "vnl.String";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x5fa779df;
			field.name = "type";
			field.type.hash = 0x7450a5b3;
			field.type.name = "vnl.info.TypeName";
		}
	}
	{
		vnl::info::Type& info = res["vnl.info.MemoryInfo"];
		info.hash = 0x734ed4bc;
		info.name = "vnl.info.MemoryInfo";
		info.is_struct = true;
		info.is_class = true;
		info.super.hash = 0xfdb7a5a8;
		info.super.name = "vnl.Value";
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x57eeb48c;
			field.name = "size";
			field.type.hash = 0xf0f9b0e2;
			field.type.name = "int";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x191f6b36;
			field.name = "num_alloc";
			field.type.hash = 0x19d39da3;
			field.type.name = "long";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x602e8daf;
			field.name = "num_used";
			field.type.hash = 0x19d39da3;
			field.type.name = "long";
		}
	}
	{
		vnl::info::Type& info = res["vnl.info.Method"];
		info.hash = 0x1b510753;
		info.name = "vnl.info.Method";
		info.is_struct = true;
		info.is_class = true;
		info.super.hash = 0xfdb7a5a8;
		info.super.name = "vnl.Value";
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0xc114cc40;
			field.name = "hash";
			field.type.hash = 0x87aaa5f9;
			field.type.name = "vnl.Hash32";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x539b7130;
			field.name = "name";
			field.type.hash = 0x3ea151ae;
			field.type.name = "vnl.String";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x5fa779df;
			field.name = "type";
			field.type.hash = 0x7450a5b3;
			field.type.name = "vnl.info.TypeName";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x8718c62c;
			field.name = "is_const";
			field.type.hash = 0xcc74e5d4;
			field.type.name = "bool";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x3f42b528;
			field.name = "params";
			field.type.hash = 0xeda5efa7;
			field.type.name = "vnl.SList";
			field.type.generics.push_back("vnl.info.Parameter");
		}
	}
	{
		vnl::info::Type& info = res["vnl.info.ObjectInfo"];
		info.hash = 0x6400b0b3;
		info.name = "vnl.info.ObjectInfo";
		info.is_struct = true;
		info.is_class = true;
		info.super.hash = 0xfdb7a5a8;
		info.super.name = "vnl.Value";
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0xaf3e4ff0;
			field.name = "time";
			field.type.hash = 0x19d39da3;
			field.type.name = "long";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0xa5c8937c;
			field.name = "spawn_time";
			field.type.hash = 0x19d39da3;
			field.type.name = "long";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0xb8fc78eb;
			field.name = "idle_time";
			field.type.hash = 0x19d39da3;
			field.type.name = "long";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x7fd711c;
			field.name = "num_cycles";
			field.type.hash = 0x19d39da3;
			field.type.name = "long";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0xd6d6fb05;
			field.name = "num_msg_sent";
			field.type.hash = 0x19d39da3;
			field.type.name = "long";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x7f0e60e;
			field.name = "num_msg_received";
			field.type.hash = 0x19d39da3;
			field.type.name = "long";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0xa065ff2d;
			field.name = "num_msg_dropped";
			field.type.hash = 0x19d39da3;
			field.type.name = "long";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x14714094;
			field.name = "send_latency_sum";
			field.type.hash = 0x19d39da3;
			field.type.name = "long";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x7094a69f;
			field.name = "receive_latency_sum";
			field.type.hash = 0x19d39da3;
			field.type.name = "long";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x74b25275;
			field.name = "sources";
			field.type.hash = 0xe5d1fc67;
			field.type.name = "vnl.Map";
			field.type.generics.push_back("vnl.Hash64");
			field.type.generics.push_back("long");
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0xf1403223;
			field.name = "input_nodes";
			field.type.hash = 0xe5d1fc67;
			field.type.name = "vnl.Map";
			field.type.generics.push_back("vnl.Hash64");
			field.type.generics.push_back("long");
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0xa637ecaf;
			field.name = "input_channels";
			field.type.hash = 0xe5d1fc67;
			field.type.name = "vnl.Map";
			field.type.generics.push_back("vnl.Hash64");
			field.type.generics.push_back("long");
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x420d74;
			field.name = "output_channels";
			field.type.hash = 0xe5d1fc67;
			field.type.name = "vnl.Map";
			field.type.generics.push_back("vnl.Hash64");
			field.type.generics.push_back("vnl.String");
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0xe335406f;
			field.name = "input_pins";
			field.type.hash = 0xe5d1fc67;
			field.type.name = "vnl.Map";
			field.type.generics.push_back("vnl.Hash64");
			field.type.generics.push_back("vnl.String");
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0xcc9382b;
			field.name = "output_pins";
			field.type.hash = 0xe5d1fc67;
			field.type.name = "vnl.Map";
			field.type.generics.push_back("vnl.Hash64");
			field.type.generics.push_back("vnl.String");
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x6d2d01a4;
			field.name = "clients";
			field.type.hash = 0xe5d1fc67;
			field.type.name = "vnl.Map";
			field.type.generics.push_back("vnl.Hash64");
			field.type.generics.push_back("vnl.info.ClientInfo");
		}
	}
	{
		vnl::info::Type& info = res["vnl.info.Parameter"];
		info.hash = 0xf5e3f3b6;
		info.name = "vnl.info.Parameter";
		info.is_struct = true;
		info.is_class = true;
		info.super.hash = 0xfdb7a5a8;
		info.super.name = "vnl.Value";
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x539b7130;
			field.name = "name";
			field.type.hash = 0x3ea151ae;
			field.type.name = "vnl.String";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x5fa779df;
			field.name = "type";
			field.type.hash = 0x7450a5b3;
			field.type.name = "vnl.info.TypeName";
		}
	}
	{
		vnl::info::Type& info = res["vnl.info.PlayerStatus"];
		info.hash = 0xf9baa92e;
		info.name = "vnl.info.PlayerStatus";
		info.is_struct = true;
		info.is_class = true;
		info.super.hash = 0xfdb7a5a8;
		info.super.name = "vnl.Value";
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0xb60d3446;
			field.name = "filename";
			field.type.hash = 0x3ea151ae;
			field.type.name = "vnl.String";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x2c364d4d;
			field.name = "playing";
			field.type.hash = 0xcc74e5d4;
			field.type.name = "bool";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x38bdfa85;
			field.name = "error";
			field.type.hash = 0xcc74e5d4;
			field.type.name = "bool";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x9c1b758e;
			field.name = "begin_time";
			field.type.hash = 0x19d39da3;
			field.type.name = "long";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x28517039;
			field.name = "end_time";
			field.type.hash = 0x19d39da3;
			field.type.name = "long";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0xec387c20;
			field.name = "current_time";
			field.type.hash = 0x19d39da3;
			field.type.name = "long";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x94c1d19e;
			field.name = "time_offset";
			field.type.hash = 0x19d39da3;
			field.type.name = "long";
		}
	}
	{
		vnl::info::Type& info = res["vnl.info.ProcessInfo"];
		info.hash = 0x61e5f15b;
		info.name = "vnl.info.ProcessInfo";
		info.is_struct = true;
		info.is_class = true;
		info.super.hash = 0xfdb7a5a8;
		info.super.name = "vnl.Value";
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x539b7130;
			field.name = "name";
			field.type.hash = 0x3ea151ae;
			field.type.name = "vnl.String";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x6f5acb36;
			field.name = "pages";
			field.type.hash = 0x734ed4bc;
			field.type.name = "vnl.info.MemoryInfo";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0xb962a38;
			field.name = "blocks";
			field.type.hash = 0x734ed4bc;
			field.type.name = "vnl.info.MemoryInfo";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x5f332c02;
			field.name = "objects";
			field.type.hash = 0x556c0dd6;
			field.type.name = "vnl.Array";
			field.type.generics.push_back("vnl.Instance");
		}
	}
	{
		vnl::info::Type& info = res["vnl.info.RemoteInfo"];
		info.hash = 0x7aa64297;
		info.name = "vnl.info.RemoteInfo";
		info.is_struct = true;
		info.is_class = true;
		info.super.hash = 0xfdb7a5a8;
		info.super.name = "vnl.Value";
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x29243084;
			field.name = "domain_name";
			field.type.hash = 0x3ea151ae;
			field.type.name = "vnl.String";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x95fd810;
			field.name = "config_name";
			field.type.hash = 0x3ea151ae;
			field.type.name = "vnl.String";
		}
	}
	{
		vnl::info::Type& info = res["vnl.info.TopicInfo"];
		info.hash = 0x1e3eb783;
		info.name = "vnl.info.TopicInfo";
		info.is_struct = true;
		info.is_class = true;
		info.super.hash = 0xfdb7a5a8;
		info.super.name = "vnl.Value";
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0xf68c6937;
			field.name = "topic";
			field.type.hash = 0xddc3d187;
			field.type.name = "vnl.Topic";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x8494c8d8;
			field.name = "publishers";
			field.type.hash = 0xe5d1fc67;
			field.type.name = "vnl.Map";
			field.type.generics.push_back("vnl.Hash64");
			field.type.generics.push_back("long");
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0xfcc8b8eb;
			field.name = "subscribers";
			field.type.hash = 0xe5d1fc67;
			field.type.name = "vnl.Map";
			field.type.generics.push_back("vnl.Hash64");
			field.type.generics.push_back("long");
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0xf56f7d1e;
			field.name = "send_counter";
			field.type.hash = 0x19d39da3;
			field.type.name = "long";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0xbafcf9f0;
			field.name = "receive_counter";
			field.type.hash = 0x19d39da3;
			field.type.name = "long";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x50ad8a03;
			field.name = "first_time";
			field.type.hash = 0x19d39da3;
			field.type.name = "long";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x13c371be;
			field.name = "last_time";
			field.type.hash = 0x19d39da3;
			field.type.name = "long";
		}
	}
	{
		vnl::info::Type& info = res["vnl.info.TopicInfoList"];
		info.hash = 0xdc558ad;
		info.name = "vnl.info.TopicInfoList";
		info.is_struct = true;
		info.is_class = true;
		info.super.hash = 0xfdb7a5a8;
		info.super.name = "vnl.Value";
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0xaf3e4ff0;
			field.name = "time";
			field.type.hash = 0x19d39da3;
			field.type.name = "long";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x22dd6aa2;
			field.name = "topics";
			field.type.hash = 0x556c0dd6;
			field.type.name = "vnl.Array";
			field.type.generics.push_back("vnl.info.TopicInfo");
		}
	}
	{
		vnl::info::Type& info = res["vnl.info.Type"];
		info.hash = 0xbde99c40;
		info.name = "vnl.info.Type";
		info.is_struct = true;
		info.is_class = true;
		info.super.hash = 0xfdb7a5a8;
		info.super.name = "vnl.Value";
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0xc114cc40;
			field.name = "hash";
			field.type.hash = 0x87aaa5f9;
			field.type.name = "vnl.Hash32";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x539b7130;
			field.name = "name";
			field.type.hash = 0x3ea151ae;
			field.type.name = "vnl.String";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x836a9045;
			field.name = "super";
			field.type.hash = 0x7450a5b3;
			field.type.name = "vnl.info.TypeName";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x72700701;
			field.name = "is_struct";
			field.type.hash = 0xcc74e5d4;
			field.type.name = "bool";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x674ff4e3;
			field.name = "is_class";
			field.type.hash = 0xcc74e5d4;
			field.type.name = "bool";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0xc1fa0e8c;
			field.name = "is_enum";
			field.type.hash = 0xcc74e5d4;
			field.type.name = "bool";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x3e98de28;
			field.name = "is_interface";
			field.type.hash = 0xcc74e5d4;
			field.type.name = "bool";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x4b4df272;
			field.name = "is_object";
			field.type.hash = 0xcc74e5d4;
			field.type.name = "bool";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x96d44ab3;
			field.name = "fields";
			field.type.hash = 0xeda5efa7;
			field.type.name = "vnl.SList";
			field.type.generics.push_back("vnl.info.Field");
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x8457c8be;
			field.name = "methods";
			field.type.hash = 0xeda5efa7;
			field.type.name = "vnl.SList";
			field.type.generics.push_back("vnl.info.Method");
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x7cefe7cf;
			field.name = "symbols";
			field.type.hash = 0xeda5efa7;
			field.type.name = "vnl.SList";
			field.type.generics.push_back("vnl.String");
		}
	}
	{
		vnl::info::Type& info = res["vnl.info.TypeName"];
		info.hash = 0x7450a5b3;
		info.name = "vnl.info.TypeName";
		info.is_struct = true;
		info.is_class = true;
		info.super.hash = 0xfdb7a5a8;
		info.super.name = "vnl.Value";
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0xc114cc40;
			field.name = "hash";
			field.type.hash = 0x87aaa5f9;
			field.type.name = "vnl.Hash32";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0x539b7130;
			field.name = "name";
			field.type.hash = 0x3ea151ae;
			field.type.name = "vnl.String";
		}
		{
			vnl::info::Field& field = *info.fields.push_back();
			field.hash = 0xa45ffba;
			field.name = "generics";
			field.type.hash = 0xeda5efa7;
			field.type.name = "vnl.SList";
			field.type.generics.push_back("vnl.String");
		}
	}
	{
		vnl::info::Type& info = res["vnl.Enum"];
		info.hash = 0x5d6ea668;
		info.name = "vnl.Enum";
		info.is_enum = true;
	}
	{
		vnl::info::Type& info = res["vnl.op_code_t"];
		info.hash = 0x1aa757db;
		info.name = "vnl.op_code_t";
		info.is_enum = true;
		info.symbols.push_back("NOOP");
		info.symbols.push_back("MOV");
		info.symbols.push_back("REF");
		info.symbols.push_back("CMP");
		info.symbols.push_back("ADD");
		info.symbols.push_back("SUB");
		info.symbols.push_back("MUL");
		info.symbols.push_back("DIV");
		info.symbols.push_back("MOD");
		info.symbols.push_back("PUSH");
		info.symbols.push_back("POP");
		info.symbols.push_back("LOAD");
		info.symbols.push_back("STORE");
		info.symbols.push_back("PUSH_BACK");
		info.symbols.push_back("PUSH_FRONT");
		info.symbols.push_back("POP_BACK");
		info.symbols.push_back("POP_FRONT");
		info.symbols.push_back("SET");
		info.symbols.push_back("GET");
		info.symbols.push_back("ERASE");
		info.symbols.push_back("JMP");
		info.symbols.push_back("CALL");
		info.symbols.push_back("RET");
		info.symbols.push_back("READ");
		info.symbols.push_back("WRITE");
	}
	{
		vnl::info::Type& info = res["vnl.Array"];
		info.hash = 0x556c0dd6;
		info.name = "vnl.Array";
		info.is_interface = true;
		info.super.hash = 0x95ac584b;
		info.super.name = "vnl.Interface";
	}
	{
		vnl::info::Type& info = res["vnl.Binary"];
		info.hash = 0x1e7d14e9;
		info.name = "vnl.Binary";
		info.is_interface = true;
		info.super.hash = 0x95ac584b;
		info.super.name = "vnl.Interface";
	}
	{
		vnl::info::Type& info = res["vnl.Database"];
		info.hash = 0x1a20923;
		info.name = "vnl.Database";
		info.is_interface = true;
		info.is_object = true;
		info.super.hash = 0x430e9bb0;
		info.super.name = "vnl.Object";
	}
	{
		vnl::info::Type& info = res["vnl.Interface"];
		info.hash = 0x95ac584b;
		info.name = "vnl.Interface";
		info.is_interface = true;
	}
	{
		vnl::info::Type& info = res["vnl.List"];
		info.hash = 0x5056b5ce;
		info.name = "vnl.List";
		info.is_interface = true;
		info.super.hash = 0x95ac584b;
		info.super.name = "vnl.Interface";
	}
	{
		vnl::info::Type& info = res["vnl.Map"];
		info.hash = 0xe5d1fc67;
		info.name = "vnl.Map";
		info.is_interface = true;
		info.super.hash = 0x95ac584b;
		info.super.name = "vnl.Interface";
	}
	{
		vnl::info::Type& info = res["vnl.Object"];
		info.hash = 0x430e9bb0;
		info.name = "vnl.Object";
		info.is_interface = true;
		info.is_object = true;
		info.super.hash = 0x95ac584b;
		info.super.name = "vnl.Interface";
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0xc5f1083a;
			method.name = "get_private_domain";
			method.is_const = true;
			method.type.hash = 0x3ea151ae;
			method.type.name = "vnl.String";
		}
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0x34266241;
			method.name = "set_config";
			method.is_const = false;
			method.type.hash = 0x53f0e52c;
			method.type.name = "void";
		}
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0x22a11269;
			method.name = "handle";
			method.is_const = false;
			method.type.hash = 0x53f0e52c;
			method.type.name = "void";
		}
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0xe8592f85;
			method.name = "exit";
			method.is_const = false;
			method.type.hash = 0x53f0e52c;
			method.type.name = "void";
		}
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0x1b85d99;
			method.name = "get_config_map";
			method.is_const = true;
			method.type.hash = 0xe5d1fc67;
			method.type.name = "vnl.Map";
			method.type.generics.push_back("vnl.String");
			method.type.generics.push_back("vnl.String");
		}
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0x9abb388d;
			method.name = "get_config";
			method.is_const = true;
			method.type.hash = 0x3ea151ae;
			method.type.name = "vnl.String";
		}
	}
	{
		vnl::info::Type& info = res["vnl.Player"];
		info.hash = 0xe536451b;
		info.name = "vnl.Player";
		info.is_interface = true;
		info.is_object = true;
		info.super.hash = 0x430e9bb0;
		info.super.name = "vnl.Object";
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0xf73490b7;
			method.name = "get_type_info";
			method.is_const = true;
			method.type.hash = 0xe5d1fc67;
			method.type.name = "vnl.Map";
			method.type.generics.push_back("vnl.Hash32");
			method.type.generics.push_back("vnl.info.Type");
		}
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0xe745115d;
			method.name = "pause";
			method.is_const = false;
			method.type.hash = 0x53f0e52c;
			method.type.name = "void";
		}
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0xe1fbf4c8;
			method.name = "seek_rel";
			method.is_const = false;
			method.type.hash = 0x53f0e52c;
			method.type.name = "void";
		}
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0xf2cbfddb;
			method.name = "stop";
			method.is_const = false;
			method.type.hash = 0x53f0e52c;
			method.type.name = "void";
		}
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0xbd19b5cb;
			method.name = "reset";
			method.is_const = false;
			method.type.hash = 0x53f0e52c;
			method.type.name = "void";
		}
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0x71ce1b5a;
			method.name = "get_topics";
			method.is_const = true;
			method.type.hash = 0x556c0dd6;
			method.type.name = "vnl.Array";
			method.type.generics.push_back("vnl.Topic");
		}
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0x73fed50f;
			method.name = "scan";
			method.is_const = false;
			method.type.hash = 0x53f0e52c;
			method.type.name = "void";
		}
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0x25c4211b;
			method.name = "play";
			method.is_const = false;
			method.type.hash = 0x53f0e52c;
			method.type.name = "void";
		}
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0x4370e1e0;
			method.name = "get_status";
			method.is_const = true;
			method.type.hash = 0xf9baa92e;
			method.type.name = "vnl.info.PlayerStatus";
		}
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0x9b2fb63;
			method.name = "seek";
			method.is_const = false;
			method.type.hash = 0x53f0e52c;
			method.type.name = "void";
		}
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0x5c4affeb;
			method.name = "open";
			method.is_const = false;
			method.type.hash = 0x53f0e52c;
			method.type.name = "void";
		}
	}
	{
		vnl::info::Type& info = res["vnl.Pointer"];
		info.hash = 0x6a5f5c5b;
		info.name = "vnl.Pointer";
		info.is_interface = true;
		info.super.hash = 0x95ac584b;
		info.super.name = "vnl.Interface";
	}
	{
		vnl::info::Type& info = res["vnl.Process"];
		info.hash = 0x46f438;
		info.name = "vnl.Process";
		info.is_interface = true;
		info.is_object = true;
		info.super.hash = 0x430e9bb0;
		info.super.name = "vnl.Object";
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0x22a11269;
			method.name = "handle";
			method.is_const = false;
			method.type.hash = 0x53f0e52c;
			method.type.name = "void";
		}
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0x22a11269;
			method.name = "handle";
			method.is_const = false;
			method.type.hash = 0x53f0e52c;
			method.type.name = "void";
		}
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0xbb55be0c;
			method.name = "pause_log";
			method.is_const = false;
			method.type.hash = 0x53f0e52c;
			method.type.name = "void";
		}
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0xf73490b7;
			method.name = "get_type_info";
			method.is_const = true;
			method.type.hash = 0xe5d1fc67;
			method.type.name = "vnl.Map";
			method.type.generics.push_back("vnl.Hash32");
			method.type.generics.push_back("vnl.info.Type");
		}
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0x87e2d7f;
			method.name = "shutdown";
			method.is_const = false;
			method.type.hash = 0x53f0e52c;
			method.type.name = "void";
		}
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0x22a11269;
			method.name = "handle";
			method.is_const = false;
			method.type.hash = 0x53f0e52c;
			method.type.name = "void";
		}
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0xaa2ef6d9;
			method.name = "get_class_names";
			method.is_const = true;
			method.type.hash = 0x556c0dd6;
			method.type.name = "vnl.Array";
			method.type.generics.push_back("vnl.String");
		}
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0x70d1a0f8;
			method.name = "set_log_filter";
			method.is_const = false;
			method.type.hash = 0x53f0e52c;
			method.type.name = "void";
		}
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0x22a11269;
			method.name = "handle";
			method.is_const = false;
			method.type.hash = 0x53f0e52c;
			method.type.name = "void";
		}
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0xaf20300;
			method.name = "resume_log";
			method.is_const = false;
			method.type.hash = 0x53f0e52c;
			method.type.name = "void";
		}
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0xbced8d0d;
			method.name = "get_objects";
			method.is_const = true;
			method.type.hash = 0x556c0dd6;
			method.type.name = "vnl.Array";
			method.type.generics.push_back("vnl.Instance");
		}
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0x22a11269;
			method.name = "handle";
			method.is_const = false;
			method.type.hash = 0x53f0e52c;
			method.type.name = "void";
		}
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0xd50fc0dd;
			method.name = "get_topic_info";
			method.is_const = true;
			method.type.hash = 0xdc558ad;
			method.type.name = "vnl.info.TopicInfoList";
		}
	}
	{
		vnl::info::Type& info = res["vnl.Recorder"];
		info.hash = 0xf1cc425;
		info.name = "vnl.Recorder";
		info.is_interface = true;
		info.is_object = true;
		info.super.hash = 0x430e9bb0;
		info.super.name = "vnl.Object";
	}
	{
		vnl::info::Type& info = res["vnl.SArray"];
		info.hash = 0xa8cd56b6;
		info.name = "vnl.SArray";
		info.is_interface = true;
		info.super.hash = 0x95ac584b;
		info.super.name = "vnl.Interface";
	}
	{
		vnl::info::Type& info = res["vnl.SList"];
		info.hash = 0xeda5efa7;
		info.name = "vnl.SList";
		info.is_interface = true;
		info.super.hash = 0x95ac584b;
		info.super.name = "vnl.Interface";
	}
	{
		vnl::info::Type& info = res["vnl.SpyTool"];
		info.hash = 0x2d9d1f;
		info.name = "vnl.SpyTool";
		info.is_interface = true;
		info.is_object = true;
		info.super.hash = 0x430e9bb0;
		info.super.name = "vnl.Object";
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0xedbd102c;
			method.name = "set_filter";
			method.is_const = false;
			method.type.hash = 0x53f0e52c;
			method.type.name = "void";
		}
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0xf2cbfddb;
			method.name = "stop";
			method.is_const = false;
			method.type.hash = 0x53f0e52c;
			method.type.name = "void";
		}
	}
	{
		vnl::info::Type& info = res["vnl.Storage"];
		info.hash = 0xc1f517f6;
		info.name = "vnl.Storage";
		info.is_interface = true;
		info.super.hash = 0x95ac584b;
		info.super.name = "vnl.Interface";
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0x6be27404;
			method.name = "delete_entry";
			method.is_const = false;
			method.type.hash = 0x53f0e52c;
			method.type.name = "void";
		}
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0x53e783cb;
			method.name = "put_entry";
			method.is_const = false;
			method.type.hash = 0x53f0e52c;
			method.type.name = "void";
		}
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0xdc37fd46;
			method.name = "get_entries";
			method.is_const = true;
			method.type.hash = 0x556c0dd6;
			method.type.name = "vnl.Array";
			method.type.generics.push_back("Pointer");
		}
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0x2d43064b;
			method.name = "get_entry";
			method.is_const = true;
			method.type.hash = 0x83edf257;
			method.type.name = "Pointer";
		}
	}
	{
		vnl::info::Type& info = res["vnl.StorageServer"];
		info.hash = 0x2362f4c1;
		info.name = "vnl.StorageServer";
		info.is_interface = true;
		info.is_object = true;
		info.super.hash = 0x430e9bb0;
		info.super.name = "vnl.Object";
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0x6be27404;
			method.name = "delete_entry";
			method.is_const = false;
			method.type.hash = 0x53f0e52c;
			method.type.name = "void";
		}
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0x53e783cb;
			method.name = "put_entry";
			method.is_const = false;
			method.type.hash = 0x53f0e52c;
			method.type.name = "void";
		}
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0xdc37fd46;
			method.name = "get_entries";
			method.is_const = true;
			method.type.hash = 0x556c0dd6;
			method.type.name = "vnl.Array";
			method.type.generics.push_back("Pointer");
		}
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0x2d43064b;
			method.name = "get_entry";
			method.is_const = true;
			method.type.hash = 0x83edf257;
			method.type.name = "Pointer";
		}
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0x22a11269;
			method.name = "handle";
			method.is_const = false;
			method.type.hash = 0x53f0e52c;
			method.type.name = "void";
		}
	}
	{
		vnl::info::Type& info = res["vnl.String"];
		info.hash = 0x3ea151ae;
		info.name = "vnl.String";
		info.is_interface = true;
		info.super.hash = 0x95ac584b;
		info.super.name = "vnl.Interface";
	}
	{
		vnl::info::Type& info = res["vnl.Table"];
		info.hash = 0xbd71f457;
		info.name = "vnl.Table";
		info.is_interface = true;
		info.is_object = true;
		info.super.hash = 0x1a20923;
		info.super.name = "vnl.Database";
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0x62d971d5;
			method.name = "update";
			method.is_const = false;
			method.type.hash = 0x53f0e52c;
			method.type.name = "void";
		}
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0xaeb0fe60;
			method.name = "insert";
			method.is_const = false;
			method.type.hash = 0x53f0e52c;
			method.type.name = "void";
		}
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0x1b0fad1f;
			method.name = "get";
			method.is_const = true;
			method.type.hash = 0x21188082;
			method.type.name = "T";
		}
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0x6726988c;
			method.name = "get_all";
			method.is_const = true;
			method.type.hash = 0x556c0dd6;
			method.type.name = "vnl.Array";
			method.type.generics.push_back("T");
		}
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0x299f3f53;
			method.name = "remove";
			method.is_const = false;
			method.type.hash = 0x53f0e52c;
			method.type.name = "void";
		}
	}
	{
		vnl::info::Type& info = res["vnl.TcpClient"];
		info.hash = 0x48989db4;
		info.name = "vnl.TcpClient";
		info.is_interface = true;
		info.is_object = true;
		info.super.hash = 0xb681b3d8;
		info.super.name = "vnl.TcpUplink";
	}
	{
		vnl::info::Type& info = res["vnl.TcpProxy"];
		info.hash = 0x33de85dc;
		info.name = "vnl.TcpProxy";
		info.is_interface = true;
		info.is_object = true;
		info.super.hash = 0xb681b3d8;
		info.super.name = "vnl.TcpUplink";
	}
	{
		vnl::info::Type& info = res["vnl.TcpServer"];
		info.hash = 0x2d8a645f;
		info.name = "vnl.TcpServer";
		info.is_interface = true;
		info.is_object = true;
		info.super.hash = 0x430e9bb0;
		info.super.name = "vnl.Object";
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0x983c173d;
			method.name = "publish";
			method.is_const = false;
			method.type.hash = 0x53f0e52c;
			method.type.name = "void";
		}
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0xed7dfb37;
			method.name = "unsubscribe";
			method.is_const = false;
			method.type.hash = 0x53f0e52c;
			method.type.name = "void";
		}
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0x3bb5d48f;
			method.name = "subscribe";
			method.is_const = false;
			method.type.hash = 0x53f0e52c;
			method.type.name = "void";
		}
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0x7fbbe878;
			method.name = "publish";
			method.is_const = false;
			method.type.hash = 0x53f0e52c;
			method.type.name = "void";
		}
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0xc7428d8c;
			method.name = "unpublish";
			method.is_const = false;
			method.type.hash = 0x53f0e52c;
			method.type.name = "void";
		}
	}
	{
		vnl::info::Type& info = res["vnl.TcpUplink"];
		info.hash = 0xb681b3d8;
		info.name = "vnl.TcpUplink";
		info.is_interface = true;
		info.is_object = true;
		info.super.hash = 0x430e9bb0;
		info.super.name = "vnl.Object";
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0x983c173d;
			method.name = "publish";
			method.is_const = false;
			method.type.hash = 0x53f0e52c;
			method.type.name = "void";
		}
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0x22a11269;
			method.name = "handle";
			method.is_const = false;
			method.type.hash = 0x53f0e52c;
			method.type.name = "void";
		}
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0xed7dfb37;
			method.name = "unsubscribe";
			method.is_const = false;
			method.type.hash = 0x53f0e52c;
			method.type.name = "void";
		}
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0x22a11269;
			method.name = "handle";
			method.is_const = false;
			method.type.hash = 0x53f0e52c;
			method.type.name = "void";
		}
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0x3bb5d48f;
			method.name = "subscribe";
			method.is_const = false;
			method.type.hash = 0x53f0e52c;
			method.type.name = "void";
		}
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0xbd19b5cb;
			method.name = "reset";
			method.is_const = false;
			method.type.hash = 0x53f0e52c;
			method.type.name = "void";
		}
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0x7fbbe878;
			method.name = "publish";
			method.is_const = false;
			method.type.hash = 0x53f0e52c;
			method.type.name = "void";
		}
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0x6ccccd5b;
			method.name = "get_remote_info";
			method.is_const = true;
			method.type.hash = 0x7aa64297;
			method.type.name = "vnl.info.RemoteInfo";
		}
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0xc7428d8c;
			method.name = "unpublish";
			method.is_const = false;
			method.type.hash = 0x53f0e52c;
			method.type.name = "void";
		}
	}
	{
		vnl::info::Type& info = res["vnl.Uplink"];
		info.hash = 0x8d07ab7a;
		info.name = "vnl.Uplink";
		info.is_interface = true;
		info.super.hash = 0x95ac584b;
		info.super.name = "vnl.Interface";
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0x983c173d;
			method.name = "publish";
			method.is_const = false;
			method.type.hash = 0x53f0e52c;
			method.type.name = "void";
		}
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0xed7dfb37;
			method.name = "unsubscribe";
			method.is_const = false;
			method.type.hash = 0x53f0e52c;
			method.type.name = "void";
		}
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0x3bb5d48f;
			method.name = "subscribe";
			method.is_const = false;
			method.type.hash = 0x53f0e52c;
			method.type.name = "void";
		}
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0x7fbbe878;
			method.name = "publish";
			method.is_const = false;
			method.type.hash = 0x53f0e52c;
			method.type.name = "void";
		}
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0xc7428d8c;
			method.name = "unpublish";
			method.is_const = false;
			method.type.hash = 0x53f0e52c;
			method.type.name = "void";
		}
	}
	{
		vnl::info::Type& info = res["vnl.tools.AdminGUI"];
		info.hash = 0x1d8bdfc8;
		info.name = "vnl.tools.AdminGUI";
		info.is_interface = true;
		info.is_object = true;
		info.super.hash = 0x430e9bb0;
		info.super.name = "vnl.Object";
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0x22a11269;
			method.name = "handle";
			method.is_const = false;
			method.type.hash = 0x53f0e52c;
			method.type.name = "void";
		}
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0x22a11269;
			method.name = "handle";
			method.is_const = false;
			method.type.hash = 0x53f0e52c;
			method.type.name = "void";
		}
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0x22a11269;
			method.name = "handle";
			method.is_const = false;
			method.type.hash = 0x53f0e52c;
			method.type.name = "void";
		}
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0x22a11269;
			method.name = "handle";
			method.is_const = false;
			method.type.hash = 0x53f0e52c;
			method.type.name = "void";
		}
	}
	{
		vnl::info::Type& info = res["vnl.tools.ReplayGUI"];
		info.hash = 0x49f8783;
		info.name = "vnl.tools.ReplayGUI";
		info.is_interface = true;
		info.is_object = true;
		info.super.hash = 0x430e9bb0;
		info.super.name = "vnl.Object";
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0x22a11269;
			method.name = "handle";
			method.is_const = false;
			method.type.hash = 0x53f0e52c;
			method.type.name = "void";
		}
		{
			vnl::info::Method& method = *info.methods.push_back();
			method.hash = 0x22a11269;
			method.name = "handle";
			method.is_const = false;
			method.type.hash = 0x53f0e52c;
			method.type.name = "void";
		}
	}
	return res;
}


} // namespace
